// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Product {
  code  String @id
  name  String
  image String
  items Item[]
}

model Item {
  id               Int     @id @default(autoincrement())
  purchasePrice    Int
  salePrice        Int
  purchaseQuantity Int
  soldQuantity     Int     @default(0)
  product          Product @relation(fields: [productCode], references: [code])
  productCode      String
}

model Shareholder {
  id     Int     @id @default(autoincrement())
  name   String
  stocks Share[]
}

model Share {
  id            Int         @id @default(autoincrement())
  quote         Int
  count         Int
  shareholder   Shareholder @relation(fields: [shareholderId], references: [id])
  shareholderId Int
}

model Post {
  id    String @id @default(uuid())
  title String
  text  String

  // To return `Date`s intact through the API we use transformers
  // https://trpc.io/docs/v11/data-transformers
  // This is unique so it can be used for cursor-based pagination
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
